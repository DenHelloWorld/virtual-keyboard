/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={"./src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.scss */ \"./src/index.scss\");\n\nconst BODY = document.body;\nconst TITLE = 'RSS Виртуальная клавиатура';\nconst [H1, KEYBOARD_ROOT] = [document.createElement('h1'), document.createElement('div')];\nconst KEYBOARD_ROWS = 5;\nconst KEY_MAP = [['`', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace'], ['Tab', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']', '\\\\', 'Del'], ['CapsLock', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';', '\\'', 'Enter'], ['Shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/', '▲', 'Shift'], ['Ctrl', 'Win', 'Alt', 'Space', 'Alt', '◄', '▼', '►', 'Ctrl']];\nH1.textContent = TITLE;\nBODY.append(H1, KEYBOARD_ROOT);\nBODY.classList.add('body');\nH1.classList.add('h1');\nKEYBOARD_ROOT.classList.add('keyboard-root');\nfor (let i = 0; i < KEYBOARD_ROWS; i += 1) {\n  const KEYBOARD_ROW = document.createElement('div');\n  KEYBOARD_ROW.classList.add('keyboard-row', `row-${i}`, 'row');\n  const keys = KEY_MAP[i];\n  for (let j = 0; j < keys.length; j += 1) {\n    const KEY = keys[j];\n    const BUTTON = document.createElement('div');\n    BUTTON.classList.add('keyboard-key', `${KEY}`);\n    BUTTON.textContent = KEY;\n    KEYBOARD_ROW.appendChild(BUTTON);\n  }\n  KEYBOARD_ROOT.appendChild(KEYBOARD_ROW);\n}\nconst TEXTAREA = document.createElement('textarea');\nBODY.appendChild(TEXTAREA);\nconst KEY_BUTTONS = document.querySelectorAll('.keyboard-key');\nlet isCapsLockOn = false;\nKEY_BUTTONS.forEach(button => {\n  button.addEventListener('click', event => {\n    const key = button.textContent;\n    if (key === 'Backspace') {\n      TEXTAREA.value = TEXTAREA.value.slice(0, -1);\n    } else if (key === 'Space') {\n      TEXTAREA.value += ' ';\n    } else if (key === 'CapsLock') {\n      // переключение флага isCapsLockOn при нажатии на CapsLock\n      isCapsLockOn = !isCapsLockOn;\n      // изменение стиля кнопки CapsLock при переключении\n      button.classList.toggle('active', isCapsLockOn);\n    } else if (key === 'Shift') {\n      // изменение стиля кнопки Shift при нажатии\n      button.classList.add('active');\n    } else {\n      // обработка всех остальных кнопок\n      const isUpperCase = isCapsLockOn || event.getModifierState('Shift');\n      const char = isUpperCase ? key.toUpperCase() : key.toLowerCase();\n      TEXTAREA.value += char;\n    }\n  });\n\n  // удаление стиля 'active' при отпускании кнопки Shift\n  button.addEventListener('mouseup', () => {\n    if (button.textContent === 'Shift') {\n      button.classList.remove('active');\n    }\n  });\n});\n\n//# sourceURL=webpack://virtual-keyboard/./src/index.js?")},"./src/index.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://virtual-keyboard/./src/index.scss?")}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/index.js")})();